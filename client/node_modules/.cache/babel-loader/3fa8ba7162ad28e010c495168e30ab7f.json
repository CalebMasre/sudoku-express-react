{"ast":null,"code":"import _regeneratorRuntime from\"/Users/calebwossen/RCP/Sudoku/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/calebwossen/RCP/Sudoku/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/calebwossen/RCP/Sudoku/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/calebwossen/RCP/Sudoku/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import\"./App.css\";import React,{useState,useRef}from\"react\";import Board from\"./ui/Board\";import Interface from\"./ui/Interface\";import{REST}from\"./services/api.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getGrid(){var grid=[];for(var i=0;i<9;i++){grid[i]=Array(9).fill(0);}return grid;}function copy2DArray(from,to){for(var i=0;i<from.length;i++){to[i]=_toConsumableArray(from[i]);}}function Sudoku(){var _useState=useState(getGrid),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var _useState3=useState(\"** UNSOLVED **\"),_useState4=_slicedToArray(_useState3,2),puzzleStatus=_useState4[0],setPuzzleStatus=_useState4[1];var initialGrid=useRef(getGrid());function handleChange(row,col,e){var re=/^[0-9\\b]+$/;if(e.target.value===\"\"||re.test(e.target.value)){if(Number(e.target.value)<10&&initialGrid.current[row][col]===0){var newGrid=_toConsumableArray(grid);newGrid[row][col]=Number(e.target.value);setGrid(newGrid);}}}function handleInterface(_x){return _handleInterface.apply(this,arguments);}function _handleInterface(){_handleInterface=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(action){var newGrid,status,puzzStats;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.t0=action;_context.next=_context.t0===\"create\"?3:_context.t0===\"solve\"?10:_context.t0===\"clear\"?15:_context.t0===\"validate\"?20:26;break;case 3:_context.next=5;return handleCreate();case 5:newGrid=_context.sent;copy2DArray(newGrid,initialGrid.current);setPuzzleStatus(\"\");setGrid(newGrid);return _context.abrupt(\"break\",27);case 10:_context.next=12;return handleSolve();case 12:newGrid=_context.sent;setGrid(newGrid);return _context.abrupt(\"break\",27);case 15:newGrid=getGrid();copy2DArray(newGrid,initialGrid.current);setGrid(newGrid);setPuzzleStatus(\"\");return _context.abrupt(\"break\",27);case 20:_context.next=22;return handleValidate();case 22:status=_context.sent;puzzStats=status?\"** SOLVED **\":\"** UNSOLVED **\";setPuzzleStatus(puzzStats);return _context.abrupt(\"break\",27);case 26:throw new Error(\"Invalid action\");case 27:case\"end\":return _context.stop();}},_callee);}));return _handleInterface.apply(this,arguments);}function handleCreate(){return _handleCreate.apply(this,arguments);}function _handleCreate(){_handleCreate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return REST.getBoard();case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;return _context2.abrupt(\"return\",data.game);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return _handleCreate.apply(this,arguments);}function handleValidate(){return _handleValidate.apply(this,arguments);}function _handleValidate(){_handleValidate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return REST.validateBoard(grid);case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;return _context3.abrupt(\"return\",data.status);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}},_callee3,null,[[0,10]]);}));return _handleValidate.apply(this,arguments);}function handleSolve(){return _handleSolve.apply(this,arguments);}function _handleSolve(){_handleSolve=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return REST.solveBoard(grid);case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:data=_context4.sent;if(!data.status){_context4.next=12;break;}setPuzzleStatus(\"** SOLVED **\");return _context4.abrupt(\"return\",data.solution);case 12:setPuzzleStatus(\"** UNSOLVABLE **\");return _context4.abrupt(\"return\",grid);case 14:_context4.next=19;break;case 16:_context4.prev=16;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 19:case\"end\":return _context4.stop();}},_callee4,null,[[0,16]]);}));return _handleSolve.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"Sudoku\",children:[/*#__PURE__*/_jsx(Board,{puzzle:initialGrid.current,grid:grid,handleChange:handleChange}),/*#__PURE__*/_jsx(Interface,{handleInterface:handleInterface,status:puzzleStatus})]});}export default Sudoku;","map":{"version":3,"names":["React","useState","useRef","Board","Interface","REST","getGrid","grid","i","Array","fill","copy2DArray","from","to","length","Sudoku","setGrid","puzzleStatus","setPuzzleStatus","initialGrid","handleChange","row","col","e","re","target","value","test","Number","current","newGrid","handleInterface","action","handleCreate","handleSolve","handleValidate","status","puzzStats","Error","getBoard","response","json","data","game","console","log","validateBoard","solveBoard","solution"],"sources":["/Users/calebwossen/RCP/Sudoku/client/src/Sudoku.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\n\nfunction getGrid() {\n  const grid = [];\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n  return grid;\n}\n\nfunction copy2DArray(from, to) {\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\n\nfunction Sudoku() {\n  const [grid, setGrid] = useState(getGrid);\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(getGrid());\n\n  function handleChange(row, col, e) {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      if (Number(e.target.value) < 10 && initialGrid.current[row][col] === 0) {\n        const newGrid = [...grid];\n        newGrid[row][col] = Number(e.target.value);\n        setGrid(newGrid);\n      }\n    }\n  }\n\n  async function handleInterface(action) {\n    let newGrid;\n    switch (action) {\n      case \"create\":\n        newGrid = await handleCreate();\n        copy2DArray(newGrid, initialGrid.current);\n        setPuzzleStatus(\"\");\n        setGrid(newGrid);\n        break;\n      case \"solve\":\n        newGrid = await handleSolve();\n        setGrid(newGrid);\n        break;\n      case \"clear\":\n        newGrid = getGrid();\n        copy2DArray(newGrid, initialGrid.current);\n        setGrid(newGrid);\n        setPuzzleStatus(\"\");\n        break;\n      case \"validate\":\n        const status = await handleValidate();\n        const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n        setPuzzleStatus(puzzStats);\n        break;\n      default:\n        throw new Error(\"Invalid action\");\n    }\n  }\n\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      return data.game;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"Sudoku\">\n      <Board\n        puzzle={initialGrid.current}\n        grid={grid}\n        handleChange={handleChange}\n      />\n      <Interface handleInterface={handleInterface} status={puzzleStatus} />\n    </div>\n  );\n}\n\nexport default Sudoku;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}